db.createCollection("Orders");

db.Orders.insertMany([
  { Orderid: 1, custid: "CustA", date: "2023-10-25", amount: 100 },
  { Orderid: 2, custid: "CustA", date: "2023-10-26", amount: 150 },
  { Orderid: 3, custid: "CustB", date: "2023-10-27", amount: 200 },
  { Orderid: 4, custid: "CustA", date: "2023-10-28", amount: 75 },
  { Orderid: 5, custid: "CustB", date: "2023-10-29", amount: 125 },
  { Orderid: 6, custid: "CustC", date: "2023-10-30", amount: 50 },
]);

// Aggregation: Calculate the total amount for each customer
db.Orders.aggregate([
  {
    $group: {
      _id: "$custid",
      totalAmount: { $sum: "$amount" },
      minAmount: { $min: "$amount" },
      maxAmount: { $max: "$amount" },
      avgAmount: { $avg: "$amount" },
      orderCount: { $sum: 1 },
      firstOrder: { $first: "$Orderid" },
      lastOrder: { $last: "$Orderid" },
      orderDates: { $push: "$date" },
      uniqueCustomers: { $addToSet: "$custid" }
    }
  }
]);

// Create an index on the "custid" field
db.Orders.createIndex({ custid: 1 });

// Query the total amount for a specific customer (e.g., "CustA")
db.Orders.find({ custid: "CustA" });

// Explain the query and check if it's using the index
db.Orders.find({ custid: "CustA" }).explain("executionStats");
